@inject IAdminService AdminService
@if (!string.IsNullOrEmpty(Alert))
{
    <div class="d-flex">
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @Alert
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" @onclick="CloseAlert"></button>
        </div>
    </div>
}


@if (Navigation == PageType.Create)
{
    <ChangeSection Page="@Navigation" OnChange="OnChange"></ChangeSection>
}

@if (Navigation == PageType.Edit || Navigation == PageType.Delete)
{
    <ChangeSection Page="@Navigation" OnChange="OnChange" Model="@Section"></ChangeSection>
}


<div class="d-flex">
    <a href="/" class="btn btn-outline-secondary rounded-0 me-1">Home</a>
    <button type="button" class="btn btn-outline-primary rounded-0 me-1" @onclick="()=>ChangePageType(PageType.Index)">Index</button>
    <button type="button" class="btn btn-outline-success rounded-0" @onclick="()=>ChangePageType(PageType.Create)">Create</button>
</div>

<SectionsIndex OnClick="OnClick" Model="Model"></SectionsIndex>

@code {
    public List<SectionDTO> Model { get; set; } = new();
    public string Alert { get; set; } = string.Empty;
    public string Navigation { get; set; } = PageType.Index;

    public SectionDTO Section { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Alert = "";
        Model = await AdminService.GetAsync<SectionDTO>($"section");

    }


    public void ChangePageType(string pageType)
    {
        Navigation = pageType;
    }

    public void CloseAlert()
    {
        Alert = string.Empty;
    }



    async Task OnClick(ClickModel model)
    {
        if (model.PageType.Equals(PageType.Edit) || model.PageType.Equals(PageType.Delete))
            Section = await AdminService.SingleAsync<SectionDTO>($"section/{model.Id}") ?? new();

        ChangePageType(model.PageType);
    }


    async Task OnChange(string alert)
    {
        try
        {
            Alert = alert;
            Model = await AdminService.GetAsync<SectionDTO>($"section");
            ChangePageType(PageType.Index);

        }
        catch (Exception)
        {

            Alert = "Error CDE";
        }
    }
}
